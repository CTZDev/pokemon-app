{"version":3,"sources":["app/js/script.js","node_modules/regenerator-runtime/runtime.js","app/js/modules/pokemon_card.js","app/js/modules/combo_selected.js"],"names":["factory","define","amd","_typeof","obj","Symbol","iterator","constructor","prototype","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","Object","toString","call","slice","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","i","arr2","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","getDataPokemon","_ref","_callee","response","_context","fetch","ok","status","statusText","json","t0","console","log","d","document","$fragment","createDocumentFragment","getTypePokemon","e","data","typesOfPokemon","results","showTypePokemon","_x","$containerTypeOfPokemon","querySelector","map","_ref2","$li","createElement","classList","add","textContent","changeTextCapitalized","dataset","append","selectedMenu","firstTypePokemon","wrapper","addEventListener","target","matches","concat","closest","toggle","$option","$listOptions","parentElement","children","$customSelectText","option","remove","$select","contains","text","capitalizeText","toUpperCase","restText"],"mappings":"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","file":"app/js/script.js","sourcesContent":["//Codigo para la traspilación de funciones asincronas\r\nimport \"core-js/stable\";\r\nimport \"regenerator-runtime/runtime\";\r\n//Generación de codigo propio\r\nimport getDataPokemon from \"./modules/pokemon_card.js\";\r\nimport getTypePokemon from \"./modules/combo_selected.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\r\n  getDataPokemon();\r\n  getTypePokemon();\r\n});\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const d = document;\r\n\r\nconst getDataPokemon = async () => {\r\n  try {\r\n    let url = \"https://pokeapi.co/api/v2/pokemon-form/1/\";\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw { status: response.status, statusText: response.statusText };\r\n    const data = await response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getDataPokemon;\r\n","const d = document;\r\nconst $fragment = d.createDocumentFragment();\r\n\r\nconst getTypePokemon = async (e) => {\r\n  try {\r\n    let url = \"https://pokeapi.co/api/v2/type\";\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw { status: response.status, statusText: response.statusText };\r\n    const data = await response.json();\r\n    const typesOfPokemon = await data.results;\r\n    showTypePokemon(typesOfPokemon);\r\n    console.log(data.results);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst showTypePokemon = (typesOfPokemon) => {\r\n  const $containerTypeOfPokemon = d.querySelector(\"ul[data-custom-types]\");\r\n  typesOfPokemon.map(({ name }, i) => {\r\n    const $li = d.createElement(\"li\");\r\n    if (i === 0) $li.classList.add(\"custom-option\", \"selected\");\r\n    $li.textContent = changeTextCapitalized(name);\r\n    $li.classList.add(\"custom-option\");\r\n    $li.dataset.value = name;\r\n    $fragment.append($li);\r\n  });\r\n  $containerTypeOfPokemon.append($fragment);\r\n  selectedMenu(typesOfPokemon[0]);\r\n};\r\n\r\nconst selectedMenu = (firstTypePokemon) => {\r\n  const wrapper = \".select-wrapper\";\r\n  const $selectTypePokemon = d.querySelector(\".select-trigger > span\");\r\n  $selectTypePokemon.textContent = changeTextCapitalized(firstTypePokemon?.name);\r\n\r\n  d.addEventListener(\"click\", (e) => {\r\n    if (e.target.matches(`${wrapper} *`)) {\r\n      const $selected = e.target.closest(\".select\");\r\n      $selected.classList.toggle(\"open\");\r\n    }\r\n\r\n    if (e.target.matches(\".custom-option\")) {\r\n      const $option = e.target;\r\n      const $listOptions = $option.parentElement.children;\r\n      const $parentOption = $option.closest(\".select\");\r\n      const $customSelectText = $parentOption.querySelector(\".select-trigger > span\");\r\n\r\n      [...$listOptions].map((option) => option.classList.remove(\"selected\"));\r\n      $option.classList.add(\"selected\");\r\n      $customSelectText.textContent = $option.textContent;\r\n      console.log($option);\r\n    }\r\n\r\n    if (!e.target.matches(`${wrapper} *`)) {\r\n      const $select = d.querySelector(\".select\");\r\n      if ($select.classList.contains(\"open\")) {\r\n        $select.classList.remove(\"open\");\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst changeTextCapitalized = (text) => {\r\n  const capitalizeText = text.charAt(0).toUpperCase();\r\n  const restText = text.slice(1);\r\n  return capitalizeText.concat(restText);\r\n};\r\n\r\nexport default getTypePokemon;\r\n"]}